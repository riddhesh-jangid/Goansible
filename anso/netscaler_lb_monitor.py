import random
import string
import os
from register import registerObj
import writer

class netscaler_lb_monitor:
    playbook_name = ''
    hosts=[]
    register=[]
    nitro_pass = ''
    nitro_user = ''
    nsip = ''
    Snmpoid = ''
    acctapplicationid = ''
    action = ''
    alertretries = ''
    application = ''
    attribute = ''
    authapplicationid = ''
    basedn = ''
    binddn = ''
    customheaders = ''
    database = ''
    destip = ''
    destport = ''
    deviation = ''
    dispatcherip = ''
    dispatcherport = ''
    domain = ''
    downtime = ''
    evalrule = ''
    failureretries = ''
    filename = ''
    filter = ''
    firmwarerevision = ''
    group = ''
    hostipaddress = ''
    hostname = ''
    httprequest = ''
    inbandsecurityid = ''
    interval = ''
    ipaddress = ''
    iptunnel = ''
    kcdaccount = ''
    lasversion = ''
    logonpointname = ''
    lrtm = ''
    maxforwards = ''
    metrictable = ''
    monitorname = ''
    mssqlprotocolversion = ''
    netprofile = ''
    nitro_protocol = ''
    nitro_timeout = ''
    oraclesid = ''
    originhost = ''
    originrealm = ''
    password = ''
    productname = ''
    query = ''
    querytype = ''
    radaccountsession = ''
    radaccounttype = ''
    radapn = ''
    radframedip = ''
    radkey = ''
    radmsisdn = ''
    radnasid = ''
    radnasip = ''
    recv = ''
    respcode = ''
    resptimeout = ''
    resptimeoutthresh = ''
    retries = ''
    reverse = ''
    rtsprequest = ''
    save_config = ''
    scriptargs = ''
    scriptname = ''
    secondarypassword = ''
    secure = ''
    send = ''
    sipmethod = ''
    sipreguri = ''
    sipuri = ''
    sitepath = ''
    snmpcommunity = ''
    snmpthreshold = ''
    snmpversion = ''
    sqlquery = ''
    state = ''
    storedb = ''
    storefrontacctservice = ''
    storefrontcheckbackendservices = ''
    storename = ''
    successretries = ''
    supportedvendorids = ''
    tos = ''
    tosid = ''
    transparent = ''
    trofscode = ''
    trofsstring = ''
    type = ''
    units1 = ''
    units2 = ''
    units3 = ''
    units4 = ''
    username = ''
    validate_certs = ''
    validatecred = ''
    vendorid = ''
    vendorspecificacctapplicationids = ''
    vendorspecificauthapplicationids = ''
    vendorspecificvendorid = ''
    def compile(self):
       self.playbook_name=writer.writer(self,self.playbook_name)

    def run(self):
       dump_name=''.join([random.choice(string.ascii_letters + string.digits) for n in range(32)])
       os.system('{} | tee {}'.format(self.playbook_name,dump_name))
       self.register = registerObj(dump_name)
       os.remove(dump_name)

    def go(self):
       self.compile()
       self.run()

